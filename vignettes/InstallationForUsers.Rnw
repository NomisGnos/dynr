
\documentclass{article}
\usepackage[utf8]{inputenc}
\usepackage{hyperref}
\hypersetup{colorlinks=true}
\usepackage{menukeys} 
\usepackage{graphicx}
\usepackage{float}
\usepackage{listings,textcomp} % for R code blocks

\title{User Installation Instructions Manual for \texttt{dynr}}
\author{Michael D. Hunter, Sy-Miin Chow,  Lu Ou, Sukruth N. Reddy,\\ Meng Chen, \& Linying Ji}
\date{\today}

\begin{document}
\SweaveOpts{concordance=TRUE}

\maketitle
The \texttt{\texttt{dynr}} software is a package for R written in R and C.  It has utilities which allow users to create C code for linear and nonlinear dynamic models, including regime-switching models, without ever having to actually write C code.  Various functions in R are called by the user to specify the model desired.  These functions in turn write code in C based on the user's input.  These functions are then compiled and shared with the rest of the \texttt{\texttt{dynr}} C code to estimate the model, obtaining free parameters estimates, standard errors, and latent variable estimates.



\section{\Large Instructions for Installing and Using \texttt{dynr} on a Windows Computer}
Because the \texttt{\texttt{dynr}} package compiles C code in response to user input, more setup is required for the \texttt{\texttt{dynr}} package than for many others. The general requirements are as follows:

\begin{enumerate}
\item R must be installed in a directory without spaces in the path.
\item Rtools must be installed so that C code can be compiled on Windows.
\item Additional GSL libraries must be installed so that the C code can use GSL for matrix multiplication routines.
\item The environment variable for the system Path must be modified to include R and Rtools.
\item An environment variable for GSL called LIB\_GSL must be created.
\end{enumerate}

Each of these steps is detailed below.  We acknowledge that this additional setup can be bothersome, but we believe the ease of use for the rest of the package and the wide variety of models it is possible to fit with it will compensate for this initial burden.  Hopefully you will agree!

\subsection{\Large Instructions for Installation of R}
\begin{itemize}
    \item Make sure that R is installed and Check the directory in which R is installed.
    \item If not go to \href{https://www.r-project.org/}{https://www.r-project.org/}  and click on download R and select any mirror.
    \item The critical step is just to make sure that you install R to a directory where there are {\bf no spaces} in the words describing the directory.  By default, it will suggest to install R in {``C:\textbackslash Program Files''} on your computer. Instead change it to just {``C:\textbackslash''} {\em or any other directory where there are {\bf no spaces} in the words describing the directory}. For example as given in the default directory ``Program Files'' has a space in between the two words so avoid using such directories.
\end{itemize}


\subsection{\Large Instructions for Installation of R-tools }
\begin{enumerate}
\item Install R-tools through \url{https://cran.r-project.org/bin/windows/Rtools/}. Install the latest version of Rtools.
\item You may be asked if you want to save or run a file ``Rtools33.exe''. Choose ``Save'' and save the file on the Desktop. Then double-click on the icon for the file to run it.
\item You will be asked what language to install it in - choose English.
\item The Rtools Setup Wizard will appear in a window. Click ``Next'' at the bottom of the R Setup wizard window.
\item The next page says ``Information'' at the top. Click ``Next'' again.
\item The next page says ``Select Destination Location'' at the top. By default, it will suggest to install R in ``C:\textbackslash Rtools'' on your computer. Click ``Next'' at the bottom of the R tools Setup wizard window.
\item The next page says ``Select components'' at the top. Make sure that the Cygwin Dlls box {\bf is checked}. Click ``Next'' again.
\item The next page says ``Select additional tasks'' at the top. Check the box to edit the system PATH. Click ``Next'' again.
\item Add the directory paths containing both R and Rtools (examples are shown below). Place these paths at the top of your list of {\em system path} variable or just move them all to way up to the top.\\
\texttt{C:\textbackslash Rtools\textbackslash bin;\\
 C:\textbackslash Rtools\textbackslash gcc-4.6.3\textbackslash bin;\\
 C:\textbackslash R\textbackslash R-3.2.3\textbackslash bin;}\\
You may want to first go to the directory where Rtools is installed and check that you know the correct pathway containing the gcc version you have installed (e.g., 4.6.3 in the example below). Also make sure that you enter the path containing R.exe (e.g., in C:\textbackslash R\textbackslash R-3.2.3\textbackslash bin in the example above).
\item The next page says ``Ready to install'' at the top. Click ``install''.
\item Rtools should now be installed. This will take about a minute. Click ``Finish''.
\end{enumerate}



\subsection{\Large Instructions for Downloading Prerequisite Files}
\begin{enumerate}
\item  Go to \href{http://www.stats.ox.ac.uk/pub/Rtools/libs.html}{http://www.stats.ox.ac.uk/pub/Rtools/libs.html}.
\item Download ``local323.zip'' (or the latest version) by clicking it.  The 323 refers to R 3.2.3.
\item Extract it into a new folder and copy and paste the extracted new folder into the same directory as R (``C:\textbackslash R'') so that there would be two folders in that directory. One containing R-3.2.3 (or whatever version of R you have installed) and another local323.
\end{enumerate}


\subsection{\Large Setting up Path and Environment Variables }
\begin{enumerate}
 \item Open - Control Panel\textbackslash System and Security\textbackslash System
 \item Click on Advanced system settings
 \item Add a new system variable by clicking on New.
 \item Name the new variable as LIB\_GSL and set the variable value to the 
 directory containing the Local323 files. Example {C:/R/local323} but please note that the direction of these slashes is important This slash / will work but {\em not} this one \textbackslash.
  \item Check if R can be run through CMD as follows. Put a simple R script (e.g., ``Hello.r'') script from Angel to a known directory. Open the command prompt window. If you can't find it just do a search from the Start Menu for ``cmd'' and open ``Command Prompt.exe''. Then change directory to the location containing ``Hello.r'' (e.g., cd C:\textbackslash myfiles). Run the script by typing ``Rscript Hello.r''. If the file runs correctly, it should print out ``hello'' in the command prompt console. If not follow the next 4 steps.
 \item Close your command prompt window.
 \item Repeat (1) and (2).
 \item Check to make sure that your path variable specified during Rtools installation is specified correctly. In Windows 10 do so by clicking on ``Environment Variables'' and then in the ``System variables'' panel click on ``Path'' and then ``Edit''. Check that the following paths have been specified at the front of your {\em system} path variable or just move them all to way up to the top.
 \texttt{C:\textbackslash Rtools\textbackslash bin;C:\textbackslash Rtools\textbackslash gcc-4.6.3\textbackslash bin;C:\textbackslash R\textbackslash R-3.2.3\textbackslash bin;}
 \item Repeat (5) and see if you can now run R from CMD. Make sure that you open a new CMD window after you have completed the steps above. Try typing in ``PATH'' in CMD to make sure that the newly added paths are indeed shown in the output.
\end{enumerate}


\subsection{\Large Wrapping up the Installation Procedure }\label{wrapup}
\begin{enumerate}
\item Open RGui, Rstudio or whatever editor you use to run R. Please type the following code to check whether the gsl commands can be found correctly:\\ \texttt{system("gsl-config --cflags", intern=TRUE)}\\ When the command can not be found, and you know where it is stored (e.g., "/opt/local/bin"), we could then set the PATH variable by typing: \\
\texttt{Sys.setenv(PATH=paste0(Sys.getenv("PATH"),":","/opt/local/bin"))}\\ and then check again.
\item Install \texttt{dynr} from CRAN as usual by typing install.packages(`\texttt{dynr}') and then require(`\texttt{dynr}').
\item To test if \texttt{dynr} is installed correctly, run one of the demo examples. For instance, type: \\
\texttt{demo(`LinearSDE',package=`\texttt{dynr}')}\\
\texttt{Press $<$Return$>$ to start the demo.}\\
Note that this specific demo requires the packages \textit{Matrix} and \textit{mvtnorm} so make sure that these have been installed.
\end{enumerate}


\section{\Large Instructions for Installing and Using \texttt{dynr} On Mac}
\begin{enumerate}
\item Install Xcode with the command line tools from your Apple store. For this and all the subsequent steps, please read the installation instructions on the individual websites carefully to pick the correct software versions for your operating system.
\item Install Macports by going to \url{https://www.macports.org/install.php}
\item Open the terminal window. In the terminal window install the gsl library by typing: ``sudo port install gsl''.
\item Follow the steps in section \ref{wrapup} to finish the installation process in R.
\end{enumerate}


\end{document}
