data=dyad20.2)
gam1.2 <- gam(Mom2~s(TIME,by=Babylag1)
+TICKLE,
data=dyad20.2)
plot(gam1.2)
?gam.plot
?gam
gam.check(gam1.2)
length(TIME)
gam1.2 <- gam(Mom2~s(TIME,by=Babylag1)
+TICKLE,k=length(TIME)/3
data=dyad20.2)
length(dyad20.2$TIME)/3
gam1.2 <- gam(Mom2~s(TIME,by=Babylag1)
+TICKLE,k=length(dyad20.2$TIME)/3,
data=dyad20.2)
gam.check(gam1.2)
length(dyad20.2$TIME)/3
gam1.2 <- gam(Mom2~s(TIME,by=Babylag1)
+TICKLE,k=140,
data=dyad20.2)
gam1.2 <- gam(Mom2~s(TIME,by=Babylag1)
+TICKLE,knots=100,
data=dyad20.2)
gam1.2 <- gam(Mom2~s(TIME,by=Babylag1)
+TICKLE,
data=dyad20.2)
gam.control(gam1.2)
gam1.2 <- gam(Mom2~s(TIME,by=Babylag1,k=100)
+TICKLE,
data=dyad20.2)
gam.check(gam1.2)
gam1.2 <- gam(Mom2~s(TIME,by=Babylag1,k=200)
+TICKLE,
data=dyad20.2)
gam.check(gam1.2)
gam1.2 <- gam(Mom2~s(TIME,by=Babylag1,k=length(TIME))
+TICKLE,
data=dyad20.2)
length(TIME)
gam1.2 <- gam(Mom2~s(TIME,by=Babylag1,k=350)
+TICKLE,
data=dyad20.2)
gam.check(gam1.2)
gam1.2 <- gam(Mom2~s(TIME,by=Babylag1,k=400)
+TICKLE,
data=dyad20.2)
gam.check(gam1.2)
plot(gam1.2)
gam1.2 <- gam(Mom2~s(TIME,by=Babylag1,k=115)
+TICKLE,
data=dyad20.2)
gam.check(gam1.2)
gam.check(gam1.2)
plot(gam1.2)
plot(gam1.2)
gam1.2 <- gam(Mom2~s(TIME,by=Babylag1+TICKLE,k=115)
data=dyad20.2)
gam1.2 <- gam(Mom2~s(TIME,by=Babylag1,k=115) +
s(TIME,by=TICKLE,k=115)
data=dyad20.2)
gam1.2 <- gam(Mom2~s(TIME,by=Babylag1,k=115) +
s(TIME,by=TICKLE,k=115),
data=dyad20.2)
gam.check(gam1.2)
plot(gam1.2)
plot(gam1.2,page=1)
gam1.2 <- gam(Mom2~s(TIME,by=Babylag1,k=115) +
s(TIME,by=TICKLE,k=115) +
s(TIME,by=1,k=115),
data=dyad20.2)
gam1.2 <- gam(Mom2~s(TIME,by=Babylag1,k=115) +
s(TIME,by=TICKLE,k=115) +
s(TIME),
data=dyad20.2)
gam.check(gam1.2)
plot(gam1.2,page=1)
?gam
dyad20.2$int = rep(1,length(dyad20.2$TIME))
dyad20.2$int = rep(1,length(dyad20.2$TIME))
gam1.2 <- gam(Mom2~s(TIME,by=Babylag1,k=115) +
s(TIME,by=TICKLE,k=115) +
s(INT),
data=dyad20.2)
gam1.2 <- gam(Mom2~s(TIME,by=Babylag1,k=115) +
s(TIME,by=TICKLE,k=115) +
s(int),
data=dyad20.2)
gam1.2 <- gam(Mom2~s(TIME)+s(TIME,by=Babylag1,k=115) +
s(TIME,by=TICKLE,k=115)
data=dyad20.2)
gam1.2 <- gam(Mom2~s(TIME)+s(TIME,by=Babylag1,k=115) +
s(TIME,by=TICKLE,k=115),
data=dyad20.2)
gam.check(gam1.2)
plot(gam1.2,page=1)
gam1.3 <- gam(Mom2~s(TIME,by=Babylag1,k=115) +
s(TIME,by=TICKLE,k=115),
data=dyad20.2)
gam.check(gam1.3)
plot(gam1.3,page=1)
gam1.4 <- gam(Baby2~s(TIME,by=Momlag1,k=115) +
s(TIME,by=TICKLE,k=115),
data=dyad20.2)
gam.check(gam1.4)
plot(gam1.4,page=1)
gam1.4 <- gam(Baby2~s(TIME)+s(TIME,by=Momlag1,k=115) +
s(TIME,by=TICKLE,k=115),
data=dyad20.2)
gam.check(gam1.4)
plot(gam1.4,page=1)
par(mfrow=c(1,1),cex.lab=1.5,cex.axis=1.5)
plot(Mom2,type="l",xlab="Time",ylab="Composite Automated Facial Measure",ylim=c(-3,5),lwd=1)
lines(Baby2,lty=8,lwd=3)
legend('topright', legend=c("Mother","Baby"), lwd=c(1,3),lty=c(1,8),cex=1.5,bty="n")
save.image("~/D/DanielMessinger/TVmodel/Run1.RData")
dyad20 = read.table('/Users/symiin/D/DanielMessinger/Data/multipleindicators/dyad20frame.dat',skip=1)
colnames(dyad20)= c("TIME","MLIP","MEYE","BLIP","BMOUTH",
"BEYE","TICKLE")
head(dyad20)
par(cex.lab=1.5,cex.axis=1.3,mfrow=c(2,2))
plot(dyad20$MLIP,type="l",xlab="Time",ylab="Smile strength",ylim=c(-3,5))
lines(dyad20$BLIP,lty=8,lwd=3)
legend('topright', c("Mother","Baby"), lwd=c(1,3),lty=c(1,8),bty="n")
plot(dyad20$BMOUTH,type="l",xlab="Time",ylab="Mouth opening",ylim=c(-3,5))
#lines(dyad20$BMOUTH,lty=8,lwd=3)
legend('topright', c("Mother","Baby"), lwd=c(1,3),lty=c(1,8),bty="n")
plot(dyad20$MEYE,type="l",xlab="Time",ylab="Eye constriction",ylim=c(-3,5))
lines(dyad20$BEYE,lty=8,lwd=3)
legend('topright', c("Mother","Baby"), lwd=c(1,3),lty=c(1,8),bty="n")
plot(dyad20$TICKLE,type="l",xlab="Time",ylab="Tickle")
MLIP = aggregate(ts(dyad20$MLIP),ndelta=3,FUN=mean)
MEYE = aggregate(ts(dyad20$MEYE),ndelta=3,FUN=mean)
BLIP = aggregate(ts(dyad20$BLIP),ndelta=3,FUN=mean)
BEYE = aggregate(ts(dyad20$BEYE),ndelta=3,FUN=mean)
BMOUTH = aggregate(ts(dyad20$BMOUTH),ndelta=3,FUN=mean)
TICKLE = aggregate(ts(dyad20$TICKLE),ndelta=3,FUN=mean)
TIME = 1:length(MLIP)
dyad20.2 = cbind(TIME,MLIP,MEYE,BLIP,BEYE,BMOUTH,TICKLE)
dyad20.2 = data.frame(dyad20.2)
dyad20.2$TICKLE[dyad20.2$TICKLE>0]=1
par(mfrow=c(1,1),cex.lab=1.5,cex.axis=1.5)
plot(Mom2,type="l",xlab="Time",ylab="Composite Automated Facial Measure",ylim=c(-3,5),lwd=1)
lines(Baby2,lty=8,lwd=3)
legend('topright', legend=c("Mother","Baby"), lwd=c(1,3),lty=c(1,8),cex=1.5,bty="n")
dyad20$Mom = rowMeans(cbind(dyad20$MLIP,dyad20$MEYE),na.rm=T)
dyad20$Baby = rowMeans(cbind(dyad20$BLIP,dyad20$BEYE,dyad20$BMOU),na.rm=T)
dyad20$Momlag1 = lag(dyad20$Mom,1)
dyad20$Babylag1 = lag(dyad20$Baby,1)
dyad20.2$Mom = rowMeans(cbind(dyad20.2$MLIP,dyad20.2$MEYE),na.rm=T)
dyad20.2$Baby = rowMeans(cbind(dyad20.2$BLIP,dyad20.2$BEYE,dyad20.2$BMOU),na.rm=T)
dyad20.2$Momlag1 = lag(dyad20.2$Mom,1)
dyad20.2$Babylag1 = lag(dyad20.2$Baby,1)
library(mgcv)
gam1 <- gam(Mom2~s(TIME, by = BLIP)+
s(TIME, by = BEYE) +
s(TIME, by = BMOUTH),
data=dyad20.2)
# Can put the number of knots in the spline by using,k=3 this is the minimum
plot(gam1, page=1)
gam1 <- gam(Mom~s(TIME, by = BLIP)+
s(TIME, by = BEYE) +
s(TIME, by = BMOUTH),
data=dyad20.2)
# Can put the number of knots in the spline by using,k=3 this is the minimum
plot(gam1, page=1)
pred <- predict(gam1, dyad20.2, type = "response", se.fit = TRUE)
pdat <- transform(dyad20.2, fitted = pred$fit)
pdat <- transform(pdat, upper = fitted + (1.96 * pred$se.fit),
lower = fitted - (1.96 * pred$se.fit))
plot(fitted ~TIME, data = pdat, type = "l")
lines(Mom2,col="red",lwd=3)
lines(upper ~TIME, data = pdat, lty = "dashed")
lines(lower ~TIME, data = pdat, lty = "dashed")
pred <- predict(gam1, dyad20.2, type = "response", se.fit = TRUE)
pdat <- transform(dyad20.2, fitted = pred$fit)
pdat <- transform(pdat, upper = fitted + (1.96 * pred$se.fit),
lower = fitted - (1.96 * pred$se.fit))
plot(fitted ~TIME, data = pdat, type = "l")
lines(Mom,col="red",lwd=3)
lines(upper ~TIME, data = pdat, lty = "dashed")
lines(lower ~TIME, data = pdat, lty = "dashed")
par(mfrow=c(1,1),cex.lab=1.5,cex.axis=1.5)
plot(Mom,type="l",xlab="Time",ylab="Composite Automated Facial Measure",ylim=c(-3,5),lwd=1)
lines(Baby,lty=8,lwd=3)
legend('topright', legend=c("Mother","Baby"), lwd=c(1,3),lty=c(1,8),cex=1.5,bty="n")
dyad20$Mom = rowMeans(cbind(dyad20$MLIP,dyad20$MEYE),na.rm=T)
dyad20$Baby = rowMeans(cbind(dyad20$BLIP,dyad20$BEYE,dyad20$BMOU),na.rm=T)
dyad20$Momlag1 = lag(dyad20$Mom,1)
dyad20$Babylag1 = lag(dyad20$Baby,1)
par(mfrow=c(1,1),cex.lab=1.5,cex.axis=1.5)
plot(Mom,type="l",xlab="Time",ylab="Composite Automated Facial Measure",ylim=c(-3,5),lwd=1)
lines(Baby,lty=8,lwd=3)
legend('topright', legend=c("Mother","Baby"), lwd=c(1,3),lty=c(1,8),cex=1.5,bty="n")
par(mfrow=c(1,1),cex.lab=1.5,cex.axis=1.5)
plot(dyad20$Mom,type="l",xlab="Time",ylab="Composite Automated Facial Measure",ylim=c(-3,5),lwd=1)
lines(dyad20$Baby,lty=8,lwd=3)
legend('topright', legend=c("Mother","Baby"), lwd=c(1,3),lty=c(1,8),cex=1.5,bty="n")
dyad20.2$Mom = rowMeans(cbind(dyad20.2$MLIP,dyad20.2$MEYE),na.rm=T)
dyad20.2$Baby = rowMeans(cbind(dyad20.2$BLIP,dyad20.2$BEYE,dyad20.2$BMOU),na.rm=T)
dyad20.2$Momlag1 = lag(dyad20.2$Mom,1)
dyad20.2$Babylag1 = lag(dyad20.2$Baby,1)
library(mgcv)
gam1 <- gam(Mom~s(TIME, by = BLIP)+
s(TIME, by = BEYE) +
s(TIME, by = BMOUTH),
data=dyad20.2)
# Can put the number of knots in the spline by using,k=3 this is the minimum
plot(gam1, page=1)
pred <- predict(gam1, dyad20.2, type = "response", se.fit = TRUE)
pdat <- transform(dyad20.2, fitted = pred$fit)
pdat <- transform(pdat, upper = fitted + (1.96 * pred$se.fit),
lower = fitted - (1.96 * pred$se.fit))
plot(fitted ~TIME, data = pdat, type = "l")
lines(Mom,col="red",lwd=3)
lines(upper ~TIME, data = pdat, lty = "dashed")
lines(lower ~TIME, data = pdat, lty = "dashed")
plot(fitted ~TIME, data = pdat, type = "l")
lines(dyad20.2$Mom,col="red",lwd=3)
lines(upper ~TIME, data = pdat, lty = "dashed")
lines(lower ~TIME, data = pdat, lty = "dashed")
pred <- predict(gam1, dyad20.2, type = "response", se.fit = TRUE)
pdat <- transform(dyad20.2, fitted = pred$fit)
pdat <- transform(pdat, upper = fitted + (1.96 * pred$se.fit),
lower = fitted - (1.96 * pred$se.fit))
plot(fitted ~TIME, data = pdat, type = "l")
lines(dyad20.2$Mom,col="red",lwd=3)
lines(upper ~TIME, data = pdat, lty = "dashed")
lines(lower ~TIME, data = pdat, lty = "dashed")
gam1.2 <- gam(Mom2~s(TIME)+s(TIME,by=Babylag1,k=115) +
s(TIME,by=TICKLE,k=115),
data=dyad20.2)
gam.check(gam1.2)
plot(gam1.2,page=1)
pred <- predict(gam1, dyad20.2, type = "response", se.fit = TRUE)
pdat <- transform(dyad20.2, fitted = pred$fit)
pdat <- transform(pdat, upper = fitted + (1.96 * pred$se.fit),
lower = fitted - (1.96 * pred$se.fit))
plot(fitted ~TIME, data = pdat, type = "l")
lines(dyad20.2$Mom,col="red",lwd=3)
lines(upper ~TIME, data = pdat, lty = "dashed")
lines(lower ~TIME, data = pdat, lty = "dashed")
gam1.2 <- gam(Mom2~s(TIME)+s(TIME,by=Babylag1,k=115) +
s(TIME,by=TICKLE,k=115),
data=dyad20.2)
plot(fitted ~TIME, data = pdat, type = "l")
lines(dyad20.2$Mom,col="red",lwd=3)
lines(upper ~TIME, data = pdat, lty = "dashed")
lines(lower ~TIME, data = pdat, lty = "dashed")
gam1.2 <- gam(Mom~s(TIME)+s(TIME,by=Babylag1,k=115) +
s(TIME,by=TICKLE,k=115),
data=dyad20.2)
gam.check(gam1.2)
plot(gam1.2,page=1)
gam1.3 <- gam(Mom2~s(TIME,by=Babylag1,k=115) +
s(TIME,by=TICKLE,k=115),
data=dyad20.2)
gam.check(gam1.3)
plot(gam1.3,page=1)
gam1.4 <- gam(Baby2~s(TIME)+s(TIME,by=Momlag1,k=115) +
s(TIME,by=TICKLE,k=115),
data=dyad20.2)
gam.check(gam1.4)
gam1.2 <- gam(Mom~s(TIME)+s(TIME,by=Babylag1,k=115) +
s(TIME,by=TICKLE,k=115),
data=dyad20.2)
gam.check(gam1.2)
plot(gam1.2,page=1)
gam1.3 <- gam(Mom~s(TIME,by=Babylag1,k=115) +
s(TIME,by=TICKLE,k=115),
data=dyad20.2)
gam.check(gam1.3)
plot(gam1.3,page=1)
gam1.4 <- gam(Baby~s(TIME)+s(TIME,by=Momlag1,k=115) +
s(TIME,by=TICKLE,k=115),
data=dyad20.2)
gam.check(gam1.4)
plot(gam1.4,page=1)
gam2 <- gam(Mom~s(TIME,by=Baby2)+s(TIME),
data=dyad20.2)
# Can put the number of knots in the spline by using,k=3 this is the minimum
plot(gam2, page=2)
gam2 <- gam(Mom~s(TIME,by=Baby2)+s(TIME),
data=dyad20.2)
gam2 <- gam(Mom~s(TIME,by=Baby)+s(TIME),
data=dyad20.2)
plot(gam2, page=2)
plot(gam2, page=1)
gam2$smooth[1]
load("~/Dropbox/DanielMessinger/TVmodel/Run1.RData")
library('mgcv')
?gam
gam1.2 <- gam(Mom~s(TIME)+s(TIME,by=Babylag1,k=115) +
s(TIME,by=TICKLE,k=115),
data=dyad20.2)
gam.check(gam1.2)
plot(gam1.2,page=1)
gam1.2 <- gam(Mom~s(TIME)+s(TIME,by=Babylag1) +
s(TIME,by=TICKLE),
data=dyad20.2)
gam.check(gam1.2)
plot(gam1.2,page=1)
gam1.2 <- gam(Mom~s(TIME)+s(TIME,by=Babylag1,k=200) +
s(TIME,by=TICKLE,k=200),
data=dyad20.2)
gam.check(gam1.2)
plot(gam1.2,page=1)
gam1.2 <- gam(Mom~s(TIME)+s(TIME,by=Babylag1,k=200),
data=dyad20.2)
gam.check(gam1.2)
plot(gam1.2,page=1)
gam1.2 <- gam(Mom~s(TIME,k=115)+s(TIME,by=Babylag1,k=115),
data=dyad20.2)
gam.check(gam1.2)
plot(gam1.2,page=1)
gam1.4 <- gam(Baby~s(TIME,k=115)+s(TIME,by=Momlag1,k=115) +
s(TIME,by=TICKLE,k=115),
data=dyad20.2)
gam.check(gam1.4)
plot(gam1.4,page=1)
library('mgcv')
?gam
1.43*0.89
1.39*1.01
1.43*0.89
1.16*1.37
1.08*1.37
?srcstring
21600/12
1800/(40*4)
1800/(10*4)
1800/30
500/8
21600/12
1800/(4)
450/5
450/10
2008-1964
2015-1977
2015-2012
1.99*400
4*400
1600+796
install.packages(Rmarkdown)
install.packages(Rmarkdown)
install.packages('rmarkdown')
library(dynr)
data(dataPANAsim)
data <- dynr.data(dataPANAsim, id="V1", time="V2",observed=paste0('V', 3:4), covariates=paste0('V', 5))
# the model
model <- list(num_sbj=217,
dim_latent_var=4,
dim_obs_var=2,
dim_co_variate=1,
num_regime=1,
xstart=c(log(1),log(2),0,0,-10,-10),
num_func_param=6,
ub=c(5, 5, 5, 5, 5, 5),
lb=c(-5,-5,-5,-5,-15, -15)
)
# initial values and bounds
starttime <- proc.time()
x <- dynr.run(model, data)
(time <- proc.time()-starttime)
x
require('rmarkdown')
require('knitr')
setwd("~/Dropbox/Brekfis/dynr/demo")
load("~/Dropbox/Brekfis/dynrExampleOutput.RData")
require(dynr)
summary(x)
plot(y,data=data,graphingPar=list(cex.main=1,cex.axis=1,cex.lab=1.2),numSubjDemo=2)
plot(x,data=data,graphingPar=list(cex.main=1,cex.axis=1,cex.lab=1.2),numSubjDemo=2)
data(dataPANAsim)
data <- dynr.data(dataPANAsim, id="V1", time="V2",observed=paste0('V', 3:4), covariates=paste0('V', 5))
# the model
model <- list(num_sbj=217,
dim_latent_var=4,
dim_obs_var=2,
dim_co_variate=1,
num_regime=1,
xstart=c(log(1),log(2),0,0,-10,-10),
num_func_param=6,
ub=c(5, 5, 5, 5, 5, 5),
lb=c(-5,-5,-5,-5,-15, -15)
)
# initial values and bounds
tfun <- function(x){c(exp(x[1]), exp(x[2]), x[3:6])}
x <- dynr.run(model, data, tfun)
str(x)
summary(x)
require(dynr)
require(numDeriv)
data(dataPANAsim)
data <- dynr.data(dataPANAsim, id="V1", time="V2",observed=paste0('V', 3:4), covariates=paste0('V', 5))
# the model
model <- list(num_sbj=217,
dim_latent_var=4,
dim_obs_var=2,
dim_co_variate=1,
num_regime=1,
xstart=c(log(1),log(2),0,0,-10,-10),
num_func_param=6,
ub=c(5, 5, 5, 5, 5, 5),
lb=c(-5,-5,-5,-5,-15, -15)
)
# initial values and bounds
tfun <- function(x){c(exp(x[1]), exp(x[2]), x[3:6])}
x <- dynr.run(model, data, tfun)
str(x)
summary(x)
cd ..
setwd("~/Dropbox/Brekfis/dynr")
data(dataPANAsim)
data <- dynr.data(dataPANAsim, id="V1", time="V2",observed=paste0('V', 3:4), covariates=paste0('V', 5))
head(data)
model <- list(num_sbj=217,
dim_latent_var=4,
dim_obs_var=2,
dim_co_variate=1,
num_regime=1,
xstart=c(log(1),log(2),0,0,-10,-10),
num_func_param=6,
ub=c(5, 5, 5, 5, 5, 5),
lb=c(-5,-5,-5,-5,-15, -15)
)
x <- dynr.run(model, data)
require(dynr)
require(numDeriv)
data(dataPANAsim)
data <- dynr.data(dataPANAsim, id="V1", time="V2",observed=paste0('V', 3:4), covariates=paste0('V', 5))
# the model
model <- list(num_sbj=217,
dim_latent_var=4,
dim_obs_var=2,
dim_co_variate=1,
num_regime=1,
xstart=c(log(1),log(2),0,0,-10,-10),
num_func_param=6,
ub=c(5, 5, 5, 5, 5, 5),
lb=c(-5,-5,-5,-5,-15, -15)
)
# initial values and bounds
tfun <- function(x){c(exp(x[1]), exp(x[2]), x[3:6])}
x <- dynr.run(model, data)
setwd("~/Dropbox/Brekfis/dynr/src")
data(dataPANAsim)
data <- dynr.data(dataPANAsim, id="V1", time="V2",observed=paste0('V', 3:4), covariates=paste0('V', 5))
# the model
model <- list(num_sbj=217,
dim_latent_var=4,
dim_obs_var=2,
dim_co_variate=1,
num_regime=1,
xstart=c(log(1),log(2),0,0,-10,-10),
num_func_param=6,
ub=c(5, 5, 5, 5, 5, 5),
lb=c(-5,-5,-5,-5,-15, -15)
)
# initial values and bounds
tfun <- function(x){c(exp(x[1]), exp(x[2]), x[3:6])}
x <- dynr.run(model, data)
data(dataPANAsim)
data <- dynr.data(dataPANAsim, id="V1", time="V2",observed=paste0('V', 3:4), covariates=paste0('V', 5))
# the model
model <- list(num_sbj=217,
dim_latent_var=4,
dim_obs_var=2,
dim_co_variate=1,
num_regime=1,
xstart=c(log(1),log(2),0,0,-10,-10),
num_func_param=6,
ub=c(5, 5, 5, 5, 5, 5),
lb=c(-5,-5,-5,-5,-15, -15)
)
# initial values and bounds
tfun <- function(x){c(exp(x[1]), exp(x[2]), x[3:6])}
x <- dynr.run(model, data)
setwd("~/Dropbox/Brekfis/dynr")
data(dataPANAsim)
data <- dynr.data(dataPANAsim, id="V1", time="V2",observed=paste0('V', 3:4), covariates=paste0('V', 5))
# the model
model <- list(num_sbj=217,
dim_latent_var=4,
dim_obs_var=2,
dim_co_variate=1,
num_regime=1,
xstart=c(log(1),log(2),0,0,-10,-10),
num_func_param=6,
ub=c(5, 5, 5, 5, 5, 5),
lb=c(-5,-5,-5,-5,-15, -15)
)
# initial values and bounds
tfun <- function(x){c(exp(x[1]), exp(x[2]), x[3:6])}
x <- dynr.run(model, data)
model
x <- dynr.run(model, data,tfun)
dynr.run
data(dataPANAsim)
data <- dynr.data(dataPANAsim, id="V1", time="V2",observed=paste0('V', 3:4), covariates=paste0('V', 5))
# the model
model <- list(num_sbj=217,
dim_latent_var=4,
dim_obs_var=2,
dim_co_variate=1,
num_regime=1,
xstart=c(log(1),log(2),0,0,-10,-10),
num_func_param=6,
ub=c(5, 5, 5, 5, 5, 5),
lb=c(-5,-5,-5,-5,-15, -15)
)
x <- dynr.run(model, data)
